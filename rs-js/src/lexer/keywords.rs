#[allow(dead_code)]
#[derive(Debug, PartialEq)]
pub enum Keyword {
    TCase,
    TCatch,
    TClass,
    TConst,
    TContinue,
    TDebugger,
    TDefault,
    TDelete,
    TDo,
    TElse,
    TExport,
    TExtends,
    TFinally,
    TFor,
    TFunction,
    TIf,
    TImport,
    TIn,
    TInstanceof,
    TNew,
    TReturn,
    TSuper,
    TSwitch,
    TThis,
    TThrow,
    TTry,
    TTypeof,
    TVar,
    TVoid,
    TWhile,
    TWith,
    TYield,
    // ES6 and later
    TAwait,
    TEnum,
    TImplements,
    TInterface,
    TLet,
    TPackage,
    TPrivate,
    TProtected,
    TPublic,
    TStatic,
    TBreak,
}


impl Keyword {
    pub fn to_string(&self) -> &str {
        match self {
            Keyword::TCase => "case",
            Keyword::TCatch => "catch",
            Keyword::TClass => "class",
            Keyword::TConst => "const",
            Keyword::TContinue => "continue",
            Keyword::TDebugger => "debugger",
            Keyword::TDefault => "default",
            Keyword::TDelete => "delete",
            Keyword::TDo => "do",
            Keyword::TElse => "else",
            Keyword::TExport => "export",
            Keyword::TExtends => "extends",
            Keyword::TFinally => "finally",
            Keyword::TFor => "for",
            Keyword::TFunction => "function",
            Keyword::TIf => "if",
            Keyword::TImport => "import",
            Keyword::TIn => "in",
            Keyword::TInstanceof => "instanceof",
            Keyword::TNew => "new",
            Keyword::TReturn => "return",
            Keyword::TSuper => "super",
            Keyword::TSwitch => "switch",
            Keyword::TThis => "this",
            Keyword::TThrow => "throw",
            Keyword::TTry => "try",
            Keyword::TTypeof => "typeof",
            Keyword::TVar => "var",
            Keyword::TVoid => "void",
            Keyword::TWhile => "while",
            Keyword::TWith => "with",
            Keyword::TYield => "yield",
            Keyword::TAwait => "await",
            Keyword::TEnum => "enum",
            Keyword::TImplements => "implements",
            Keyword::TInterface => "interface",
            Keyword::TLet => "let",
            Keyword::TPackage => "package",
            Keyword::TPrivate => "private",
            Keyword::TProtected => "protected",
            Keyword::TPublic => "public",
            Keyword::TStatic => "static",
            Keyword::TBreak => "break",
        }
    }
}